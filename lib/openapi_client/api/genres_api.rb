=begin
#Streaming Availability API

#Streaming Availability API allows getting streaming availability information of movies and series; and querying the list of available shows on streaming services such as Netflix, Disney+, Apple TV, Max and Hulu across 60 countries!

The version of the OpenAPI document: 4.1.0

Generated by: https://openapi-generator.tech
Generator version: 7.13.0

=end

require 'cgi'

module OpenapiClient
  class GenresApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get all Genres
    # Get the list of supported genres.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :output_language [ISO 639-1 code](https://en.wikipedia.org/wiki/ISO_639-1) of the output language. Determines in which language the output  will be in.  (default to 'en')
    # @return [Array<Genre>]
    def get_genres(opts = {})
      data, _status_code, _headers = get_genres_with_http_info(opts)
      data
    end

    # Get all Genres
    # Get the list of supported genres.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :output_language [ISO 639-1 code](https://en.wikipedia.org/wiki/ISO_639-1) of the output language. Determines in which language the output  will be in.  (default to 'en')
    # @return [Array<(Array<Genre>, Integer, Hash)>] Array<Genre> data, response status code and response headers
    def get_genres_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: GenresApi.get_genres ...'
      end
      allowable_values = ["en", "es", "tr", "fr"]
      if @api_client.config.client_side_validation && opts[:'output_language'] && !allowable_values.include?(opts[:'output_language'])
        fail ArgumentError, "invalid value for \"output_language\", must be one of #{allowable_values}"
      end
      # resource path
      local_var_path = '/genres'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'output_language'] = opts[:'output_language'] if !opts[:'output_language'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Array<Genre>'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['X-Rapid-API-Key']

      new_options = opts.merge(
        :operation => :"GenresApi.get_genres",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: GenresApi#get_genres\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
